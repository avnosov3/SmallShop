version: '3.9'

services:
  db:
    container_name: small-shop-db
    image: postgres:15.1-alpine
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
      POSTGRES_INITDB_ARGS: --auth-host=scram-sha-256 --auth-local=scram-sha-256
    expose:
    - 5432
    volumes:
    - postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    container_name: small-shop-minio
    image: bitnami/minio:2023.11.20
    restart: always
    expose:
    - 9000
    - 9001
    volumes:
    - minio-data:/datad
    - minio-export:/export
    - minio-root:/root/.minio
    - minio-certs:/certs
    - minio-bitnami:/bitnami/minio/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9001/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
    env_file:
    - .env

  createbuckets:
    image: minio/mc
    container_name: small-shop-createbuckets
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add --api s3v4 s3 http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      /usr/bin/mc mb s3/${MINIO_STATIC_BACKET_NAME}/;
      /usr/bin/mc mb s3/${MINIO_MEDIA_BACKET_NAME}/;
      /usr/bin/mc anonymous set public s3/${MINIO_STATIC_BACKET_NAME}/;
       /usr/bin/mc anonymous set public s3/${MINIO_MEDIA_BACKET_NAME}/;
      "
    depends_on:
      minio:
        condition: service_healthy
    env_file:
    - .env

  redis:
    image: redis:7.2.1-alpine
    container_name: small-shop-redis
    restart: always
    expose:
    - 6379
    volumes:
    - redis_data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    image: small-shop-app:v1.0
    container_name: small-shop-app
    restart: always
    build:
      context: .
      dockerfile: infra/app/Dockerfile
    entrypoint: /app/entrypoint.sh
    expose:
    - 8000
    env_file:
    - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy

  worker:
    image: small-shop-worker:v1.0
    container_name: small-shop-worker
    restart: on-failure
    build:
      context: .
      dockerfile: ./infra/app/Dockerfile
    command: bash -c 'celery -A core worker -l info'
    env_file:
    - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: celery -A core.celery.app status
      interval: 30s
      timeout: 30s
      retries: 2

  flower:
    image: small-shop-flower:v1.0
    container_name: small-shop-flower
    build:
      context: .
      dockerfile: ./infra/app/Dockerfile
    command: bash -c 'celery -A core flower --port=5555 --url_prefix=/flower'
    expose:
    - 5555
    volumes:
    - flower_data:/data/
    depends_on:
      worker:
        condition: service_healthy
      minio:
        condition: service_healthy
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
    - .env

  nginx:
    image: nginx:1.25-alpine
    container_name: small-shop-nginx
    ports:
    - 80:80
    - 9000:9000
    - 9001:9001
    volumes:
    - ./infra/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      app:
        condition: service_started
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      worker:
        condition: service_healthy



volumes:
  postgres:
    name: small-shop-db
  minio-storage:
    name: small-shop-minio-storage
  minio-data:
    name: small-shop-minio-data
  minio-export:
    name: small-shop-minio-export
  minio-root:
    name: small-shop-minio-root
  minio-certs:
    name: small-shop-minio-certs
  minio-bitnami:
    name: small-shop-minio-bitnami
  redis_data:
    name: small-shop-redis
  flower_data:
    name: small-shop-flower
